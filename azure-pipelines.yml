trigger:
- master
- rel/*

pr:
- master
- rel/*

jobs:
- job: Windows
  pool:
    vmImage: windows-2019

  variables:
    BuildConfiguration: Release

  steps:
  - task: DotNetCoreCLI@2  
    inputs:
      command: custom
      custom: tool
      arguments: install --tool-path . nbgv
    displayName: Install NBGV tool

  - script: nbgv cloud
    displayName: Set Version

  - powershell: |
      mkdir $Env:Temp\Packages -Force
    displayName: Create packages temp folder

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: Source/MSBuild.Sdk.Extras/MSBuild.Sdk.Extras.csproj
      configuration: $(BuildConfiguration)
      packDirectory: $(Build.ArtifactStagingDirectory)\Packages    
      verbosityPack: Minimal
    displayName: Build Package

  - task: PowerShell@2
    displayName: Authenticode Sign artifacts
    inputs:
      filePath: Tools\Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      ArtifactDirectory: $(Build.ArtifactStagingDirectory)\Packages
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts  
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)\Packages
      artifactType: container
      artifactName: Package

- job: Windows_Tests
  pool:
    vmImage: windows-2019

  variables:
    BuildConfiguration: Release
    TMPDIR: $(Build.ArtifactStagingDirectory)
    DisableNerdBank: true
    PackageVersion: 42.42.42

  steps:
  - powershell: |
      mkdir $(Build.ArtifactStagingDirectory)\Packages -Force
    displayName: Create packages temp folder

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: Source/MSBuild.Sdk.Extras/MSBuild.Sdk.Extras.csproj
      configuration: $(BuildConfiguration)
      packDirectory: $(Build.ArtifactStagingDirectory)\Packages    
      verbosityPack: Minimal
    displayName: Build Package

  - task: MSBuild@1
    inputs:
      solution: '$(build.sourcesdirectory)\TestProjects\Windows-Desktop-C#\Windows-Desktop.sln'
      msbuildArguments: /r /p:SignManifests=false
      configution: $(BuildConfiguration)
    displayName: MSBuild Test Projects 1

  - task: MSBuild@1
    inputs:
      solution: '$(build.sourcesdirectory)\TestProjects\Linux-C#\netstd2Library\netstd2Library.csproj'
      msbuildArguments: /r
      configution: $(BuildConfiguration)
    displayName: MSBuild Test Projects 2

- job: Linux
  container: nventive/wasm-build:1.4.1
  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    BuildConfiguration: Release
    TMPDIR: /tmp
    DisableNerdBank: true
    PackageVersion: 42.42.42

  steps:
  - script: |
      mkdir $TMPDIR/Packages
    displayName: Create packages temp folder

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: Source/MSBuild.Sdk.Extras/MSBuild.Sdk.Extras.csproj
      configuration: $(BuildConfiguration)
      packDirectory: $(TMPDIR)/Packages    
      verbosityPack: Minimal
    displayName: Build Package
    
  - bash: |
      dotnet build --configuration Release $(build.sourcesdirectory)/TestProjects/Linux-C#/netstd2Library/netstd2Library.csproj
      msbuild /r /p:Configuration=Release $(build.sourcesdirectory)/TestProjects/Linux-C#/netstd2Library/netstd2Library.csproj

    displayName: '.NET Std Library with unavailable platform test'


- job: macOS

  strategy:
    matrix:
      Xamarin_5_16_0:
        XamarinVersion: 5_16_0
      Xamarin_5_12_0:
        XamarinVersion: 5_12_0

  pool:
    vmImage: 'macOS-10.13'

  variables:
    BuildConfiguration: Release
    TMPDIR: /tmp
    DisableNerdBank: true
    PackageVersion: 42.42.42

  steps:

  - bash: /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(XamarinVersion)"
    displayName: Select Xamarin Version

  - script: |
      mkdir $TMPDIR/Packages
    displayName: Create packages temp folder

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: Source/MSBuild.Sdk.Extras/MSBuild.Sdk.Extras.csproj
      configuration: $(BuildConfiguration)
      packDirectory: $(TMPDIR)/Packages    
      verbosityPack: Minimal
    displayName: Build Package

  - bash: |
      dotnet build --configuration Release $(build.sourcesdirectory)/TestProjects/Linux-C#/netstd2Library/netstd2Library.csproj
      msbuild /r /p:Configuration=Release $(build.sourcesdirectory)/TestProjects/Linux-C#/netstd2Library/netstd2Library.csproj

    displayName: '.NET Std Library with unavailable platform test'
